// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v30.10.0
// source: streamnet.proto

package proto

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RequestStoreBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockInfo string `protobuf:"bytes,1,opt,name=block_info,json=blockInfo,proto3" json:"block_info,omitempty"`
}

func (x *RequestStoreBlock) Reset() {
	*x = RequestStoreBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamnet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestStoreBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestStoreBlock) ProtoMessage() {}

func (x *RequestStoreBlock) ProtoReflect() protoreflect.Message {
	mi := &file_streamnet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestStoreBlock.ProtoReflect.Descriptor instead.
func (*RequestStoreBlock) Descriptor() ([]byte, []int) {
	return file_streamnet_proto_rawDescGZIP(), []int{0}
}

func (x *RequestStoreBlock) GetBlockInfo() string {
	if x != nil {
		return x.BlockInfo
	}
	return ""
}

type RequestGetNoderank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHash []string `protobuf:"bytes,1,rep,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	Duration  uint32   `protobuf:"varint,2,opt,name=duration,proto3" json:"duration,omitempty"`
	Period    uint32   `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	NumRank   uint32   `protobuf:"varint,4,opt,name=numRank,proto3" json:"numRank,omitempty"`
}

func (x *RequestGetNoderank) Reset() {
	*x = RequestGetNoderank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamnet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestGetNoderank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestGetNoderank) ProtoMessage() {}

func (x *RequestGetNoderank) ProtoReflect() protoreflect.Message {
	mi := &file_streamnet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestGetNoderank.ProtoReflect.Descriptor instead.
func (*RequestGetNoderank) Descriptor() ([]byte, []int) {
	return file_streamnet_proto_rawDescGZIP(), []int{1}
}

func (x *RequestGetNoderank) GetBlockHash() []string {
	if x != nil {
		return x.BlockHash
	}
	return nil
}

func (x *RequestGetNoderank) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *RequestGetNoderank) GetPeriod() uint32 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *RequestGetNoderank) GetNumRank() uint32 {
	if x != nil {
		return x.NumRank
	}
	return 0
}

type ResponseStoreBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Log  string `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	Data string `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ResponseStoreBlock) Reset() {
	*x = ResponseStoreBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamnet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseStoreBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseStoreBlock) ProtoMessage() {}

func (x *ResponseStoreBlock) ProtoReflect() protoreflect.Message {
	mi := &file_streamnet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseStoreBlock.ProtoReflect.Descriptor instead.
func (*ResponseStoreBlock) Descriptor() ([]byte, []int) {
	return file_streamnet_proto_rawDescGZIP(), []int{2}
}

func (x *ResponseStoreBlock) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseStoreBlock) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ResponseStoreBlock) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type ResponseGetNoderank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     uint32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Log      string              `protobuf:"bytes,2,opt,name=log,proto3" json:"log,omitempty"`
	Teescore []*NodeRankTeescore `protobuf:"bytes,3,rep,name=teescore,proto3" json:"teescore,omitempty"`
	Teectx   []*NodeRankTeectx   `protobuf:"bytes,4,rep,name=teectx,proto3" json:"teectx,omitempty"`
}

func (x *ResponseGetNoderank) Reset() {
	*x = ResponseGetNoderank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamnet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseGetNoderank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseGetNoderank) ProtoMessage() {}

func (x *ResponseGetNoderank) ProtoReflect() protoreflect.Message {
	mi := &file_streamnet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseGetNoderank.ProtoReflect.Descriptor instead.
func (*ResponseGetNoderank) Descriptor() ([]byte, []int) {
	return file_streamnet_proto_rawDescGZIP(), []int{3}
}

func (x *ResponseGetNoderank) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ResponseGetNoderank) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *ResponseGetNoderank) GetTeescore() []*NodeRankTeescore {
	if x != nil {
		return x.Teescore
	}
	return nil
}

func (x *ResponseGetNoderank) GetTeectx() []*NodeRankTeectx {
	if x != nil {
		return x.Teectx
	}
	return nil
}

type NodeRankTeescore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attestee string  `protobuf:"bytes,1,opt,name=attestee,proto3" json:"attestee,omitempty"`
	Score    float32 `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *NodeRankTeescore) Reset() {
	*x = NodeRankTeescore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamnet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRankTeescore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRankTeescore) ProtoMessage() {}

func (x *NodeRankTeescore) ProtoReflect() protoreflect.Message {
	mi := &file_streamnet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRankTeescore.ProtoReflect.Descriptor instead.
func (*NodeRankTeescore) Descriptor() ([]byte, []int) {
	return file_streamnet_proto_rawDescGZIP(), []int{4}
}

func (x *NodeRankTeescore) GetAttestee() string {
	if x != nil {
		return x.Attestee
	}
	return ""
}

func (x *NodeRankTeescore) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

type NodeRankTeectx struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Attester string `protobuf:"bytes,1,opt,name=attester,proto3" json:"attester,omitempty"`
	Attestee string `protobuf:"bytes,2,opt,name=attestee,proto3" json:"attestee,omitempty"`
	Score    string `protobuf:"bytes,3,opt,name=score,proto3" json:"score,omitempty"`
}

func (x *NodeRankTeectx) Reset() {
	*x = NodeRankTeectx{}
	if protoimpl.UnsafeEnabled {
		mi := &file_streamnet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeRankTeectx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeRankTeectx) ProtoMessage() {}

func (x *NodeRankTeectx) ProtoReflect() protoreflect.Message {
	mi := &file_streamnet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeRankTeectx.ProtoReflect.Descriptor instead.
func (*NodeRankTeectx) Descriptor() ([]byte, []int) {
	return file_streamnet_proto_rawDescGZIP(), []int{5}
}

func (x *NodeRankTeectx) GetAttester() string {
	if x != nil {
		return x.Attester
	}
	return ""
}

func (x *NodeRankTeectx) GetAttestee() string {
	if x != nil {
		return x.Attestee
	}
	return ""
}

func (x *NodeRankTeectx) GetScore() string {
	if x != nil {
		return x.Score
	}
	return ""
}

var File_streamnet_proto protoreflect.FileDescriptor

var file_streamnet_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x6e, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x32, 0x0a, 0x11, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x81, 0x01, 0x0a,
	0x12, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x72,
	0x61, 0x6e, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x70, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x52, 0x61, 0x6e,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x52, 0x61, 0x6e, 0x6b,
	0x22, 0x4e, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x9f, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x33,
	0x0a, 0x08, 0x74, 0x65, 0x65, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x6e,
	0x6b, 0x54, 0x65, 0x65, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x08, 0x74, 0x65, 0x65, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x74, 0x65, 0x65, 0x63, 0x74, 0x78, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x61, 0x6e, 0x6b, 0x54, 0x65, 0x65, 0x63, 0x74, 0x78, 0x52, 0x06, 0x74, 0x65, 0x65, 0x63,
	0x74, 0x78, 0x22, 0x44, 0x0a, 0x10, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x54, 0x65,
	0x65, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x5e, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x61, 0x6e, 0x6b, 0x54, 0x65, 0x65, 0x63, 0x74, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74,
	0x74, 0x65, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x32, 0x9b, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x6e, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x0a, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x47, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x72, 0x61, 0x6e, 0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_streamnet_proto_rawDescOnce sync.Once
	file_streamnet_proto_rawDescData = file_streamnet_proto_rawDesc
)

func file_streamnet_proto_rawDescGZIP() []byte {
	file_streamnet_proto_rawDescOnce.Do(func() {
		file_streamnet_proto_rawDescData = protoimpl.X.CompressGZIP(file_streamnet_proto_rawDescData)
	})
	return file_streamnet_proto_rawDescData
}

var file_streamnet_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_streamnet_proto_goTypes = []interface{}{
	(*RequestStoreBlock)(nil),   // 0: proto.RequestStoreBlock
	(*RequestGetNoderank)(nil),  // 1: proto.RequestGetNoderank
	(*ResponseStoreBlock)(nil),  // 2: proto.ResponseStoreBlock
	(*ResponseGetNoderank)(nil), // 3: proto.ResponseGetNoderank
	(*NodeRankTeescore)(nil),    // 4: proto.NodeRankTeescore
	(*NodeRankTeectx)(nil),      // 5: proto.NodeRankTeectx
}
var file_streamnet_proto_depIdxs = []int32{
	4, // 0: proto.ResponseGetNoderank.teescore:type_name -> proto.NodeRankTeescore
	5, // 1: proto.ResponseGetNoderank.teectx:type_name -> proto.NodeRankTeectx
	0, // 2: proto.StreamnetService.StoreBlock:input_type -> proto.RequestStoreBlock
	1, // 3: proto.StreamnetService.GetNoderank:input_type -> proto.RequestGetNoderank
	2, // 4: proto.StreamnetService.StoreBlock:output_type -> proto.ResponseStoreBlock
	3, // 5: proto.StreamnetService.GetNoderank:output_type -> proto.ResponseGetNoderank
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_streamnet_proto_init() }
func file_streamnet_proto_init() {
	if File_streamnet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_streamnet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestStoreBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamnet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestGetNoderank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamnet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseStoreBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamnet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseGetNoderank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamnet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRankTeescore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_streamnet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeRankTeectx); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_streamnet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_streamnet_proto_goTypes,
		DependencyIndexes: file_streamnet_proto_depIdxs,
		MessageInfos:      file_streamnet_proto_msgTypes,
	}.Build()
	File_streamnet_proto = out.File
	file_streamnet_proto_rawDesc = nil
	file_streamnet_proto_goTypes = nil
	file_streamnet_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// StreamnetServiceClient is the client API for StreamnetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StreamnetServiceClient interface {
	StoreBlock(ctx context.Context, in *RequestStoreBlock, opts ...grpc.CallOption) (*ResponseStoreBlock, error)
	GetNoderank(ctx context.Context, in *RequestGetNoderank, opts ...grpc.CallOption) (*ResponseGetNoderank, error)
}

type streamnetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewStreamnetServiceClient(cc grpc.ClientConnInterface) StreamnetServiceClient {
	return &streamnetServiceClient{cc}
}

func (c *streamnetServiceClient) StoreBlock(ctx context.Context, in *RequestStoreBlock, opts ...grpc.CallOption) (*ResponseStoreBlock, error) {
	out := new(ResponseStoreBlock)
	err := c.cc.Invoke(ctx, "/proto.StreamnetService/StoreBlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *streamnetServiceClient) GetNoderank(ctx context.Context, in *RequestGetNoderank, opts ...grpc.CallOption) (*ResponseGetNoderank, error) {
	out := new(ResponseGetNoderank)
	err := c.cc.Invoke(ctx, "/proto.StreamnetService/GetNoderank", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StreamnetServiceServer is the server API for StreamnetService service.
type StreamnetServiceServer interface {
	StoreBlock(context.Context, *RequestStoreBlock) (*ResponseStoreBlock, error)
	GetNoderank(context.Context, *RequestGetNoderank) (*ResponseGetNoderank, error)
}

// UnimplementedStreamnetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedStreamnetServiceServer struct {
}

func (*UnimplementedStreamnetServiceServer) StoreBlock(context.Context, *RequestStoreBlock) (*ResponseStoreBlock, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StoreBlock not implemented")
}
func (*UnimplementedStreamnetServiceServer) GetNoderank(context.Context, *RequestGetNoderank) (*ResponseGetNoderank, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNoderank not implemented")
}

func RegisterStreamnetServiceServer(s *grpc.Server, srv StreamnetServiceServer) {
	s.RegisterService(&_StreamnetService_serviceDesc, srv)
}

func _StreamnetService_StoreBlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestStoreBlock)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamnetServiceServer).StoreBlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StreamnetService/StoreBlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamnetServiceServer).StoreBlock(ctx, req.(*RequestStoreBlock))
	}
	return interceptor(ctx, in, info, handler)
}

func _StreamnetService_GetNoderank_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetNoderank)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StreamnetServiceServer).GetNoderank(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.StreamnetService/GetNoderank",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StreamnetServiceServer).GetNoderank(ctx, req.(*RequestGetNoderank))
	}
	return interceptor(ctx, in, info, handler)
}

var _StreamnetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.StreamnetService",
	HandlerType: (*StreamnetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StoreBlock",
			Handler:    _StreamnetService_StoreBlock_Handler,
		},
		{
			MethodName: "GetNoderank",
			Handler:    _StreamnetService_GetNoderank_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "streamnet.proto",
}
